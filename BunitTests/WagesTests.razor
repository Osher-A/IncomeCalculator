@using IncomeCalculator.Componnents
@using IncomeCalculator.Pages

@inherits BunitTestContext

@code {
    private IRenderedFragment? _cut;
    private IRenderedComponent<WorkInfo>? _workInfoComponent;
    private AngleSharp.Dom.IElement _rateField;
    private AngleSharp.Dom.IElement _hoursField;
    [SetUp]
    public void SetUp()
    {
        _cut = Render( @<Wages/>);
        _workInfoComponent = _cut.FindComponent<WorkInfo>();
        _hoursField = _workInfoComponent.Find("#hours input");
        _rateField = _workInfoComponent.Find("#rate input");
    }
    [Test]
    public void WagesForm_WhenNotFillingRequiredFields_TotalDisplayShouldBeNone()
    {
       _workInfoComponent.Find("#hours input").Input(1);
       _cut.Find("h2").MarkupMatches(
    @<h2 class="text-center" style="display: none">Total per Week: £0.00</h2>);
    }
    
    [Test]
    public void WagesForm_WhenFillingRequiredFields_TotalDisplayedAccordingly()
    {
        _hoursField.Input(10.0);
        _hoursField.TriggerEvent("onmouseleave", new EventArgs());
        _rateField.Input("£10.00");
        _rateField.TriggerEvent("onmouseleave", new EventArgs());

        _cut.Find("h2").MarkupMatches(
    @<h2 class="text-center" style="display: normal">Total per Week: £100.00</h2>);
    }

     [Test]
    public void WagesForm_WhenFillingRequiredFieldsAndSelectingMontlyRadioButton_TotalMonthlyWagesDisplayed()
    {
        var radioButtons = _cut.FindAll("#radioButton input");
        radioButtons[1].Change("Month");
        _hoursField.Input(10.0);
        _hoursField.TriggerEvent("onmouseleave", new EventArgs());
        _rateField.Input("£10.00");
        _rateField.TriggerEvent("onmouseleave", new EventArgs());

        _cut.Find("h2").MarkupMatches(
    @<h2 class="text-center" style="display: normal">Total per Month: £433.33</h2>);
    }

     [Test]
    public void WagesForm_WhenFillingRequiredFieldsAndSelectingYearRadioButton_TotalYearlyWagesDisplayed()
    {
        var radioButtons = _cut.FindAll("#radioButton input");
        radioButtons[2].Change("Year");
        _hoursField.Input(10.0);
        _hoursField.TriggerEvent("onmouseleave", new EventArgs());
        _rateField.Input("£10.00");
        _rateField.TriggerEvent("onmouseleave", new EventArgs());

        _cut.Find("h2").MarkupMatches(
    @<h2 class="text-center" style="display: normal">Total per Year: £5,200.00</h2>
    );
    }

    [Test]
    public void wagesform_whenselectingminwagecheckbox_taxyearAndAgeboxgetsdisplayed()
    {
        //Arrange
        var minWageCheckBox = _workInfoComponent.Find("#checkBox");

        //Act
        minWageCheckBox.Change(true);

        //Assert
        _workInfoComponent.Find("#ageRow").MarkupMatches(
    @<div class="row mb-4" id="ageRow" style="display: normal">
  <div class="col-5 text-right">
    <label for="age" class="form-label">Age</label>
  </div>
  <div class="col-3">
    <input type="number" id="age" class="form-control border-dark " value="0" >
  </div>
    </div>
    );

        _workInfoComponent.FindComponent<TaxYearBox>().MarkupMatches(@<TaxYearBox Display="normal"/>);

    }
}
